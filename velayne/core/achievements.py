from datetime import datetime

# –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∞—á–∏–≤–∫–∏
ACHIEVEMENTS = [
    {"code": "first_trade", "name": "–ü–µ—Ä–≤–∞—è —Å–¥–µ–ª–∫–∞", "desc": "–°–æ–≤–µ—Ä—à–∏—Ç–µ –ø–µ—Ä–≤—É—é —Å–¥–µ–ª–∫—É"},
    {"code": "first_profit", "name": "–ü–µ—Ä–≤–∞—è –ø—Ä–∏–±—ã–ª—å", "desc": "–ó–∞–∫—Ä–æ–π—Ç–µ —Å–¥–µ–ª–∫—É —Å –ø—Ä–∏–±—ã–ª—å—é"},
    {"code": "fifty_trades", "name": "50 —Å–¥–µ–ª–æ–∫", "desc": "–°–æ–≤–µ—Ä—à–∏—Ç–µ 50 —Å–¥–µ–ª–æ–∫"},
    {"code": "long_streak", "name": "–°–µ—Ä–∏—è —É—Å–ø–µ—Ö–∞", "desc": "5 —Å–¥–µ–ª–æ–∫ –ø–æ–¥—Ä—è–¥ —Å –ø—Ä–æ—Ñ–∏—Ç–æ–º"},
    {"code": "risk_change", "name": "–°–º–µ–Ω–∞ —Ä–∏—Å–∫–∞", "desc": "–ò–∑–º–µ–Ω–∏—Ç–µ risk-mode"},
]

# –¢–∞–π–Ω—ã–µ –∞—á–∏–≤–∫–∏ (easter eggs)
SECRET_ACHIEVEMENTS = [
    {"code": "hidden_diver", "name": "üïµÔ∏è Hidden Diver", "desc": "–ß—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ..."},
    {"code": "risk_tamer", "name": "üé≤ Risk Tamer", "desc": "–í—ã –ø—Ä–∏—Ä—É—á–∏–ª–∏ —Ä–∏—Å–∫!"},
    {"code": "fast_fingers", "name": "‚ö° Fast Fingers", "desc": "–û—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ..."},
    {"code": "night_owl", "name": "üåô Night Owl", "desc": "–¢–æ—Ä–≥–æ–≤–∞–ª–∏ –≥–ª—É–±–æ–∫–æ–π –Ω–æ—á—å—é"},
    {"code": "zen_master", "name": "üßò Zen Master", "desc": "–ò–¥–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å"},
]

def get_user_achievements(user):
    # user.achievements ‚Äî set
    unlocked = set(getattr(user, "achievements", []))
    standard = [a for a in ACHIEVEMENTS if a["code"] in unlocked]
    secrets = [a for a in SECRET_ACHIEVEMENTS if a["code"] in unlocked]
    return standard + secrets

def update_on_fill(user_id, fill, meta: dict):
    # –†–∞—Å–∫—Ä—ã—Ç–∏–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∞—á–∏–≤–æ–∫ (–ø—Ä–∏–º–µ—Ä –ª–æ–≥–∏–∫–∏)
    unlocked = []
    # –¢–∞–π–Ω–∞—è: Hidden Diver ‚Äî –µ—Å–ª–∏ pnl < -100 –∑–∞ –æ–¥–Ω—É —Å–¥–µ–ª–∫—É
    if fill.get("pnl", 0) < -100:
        unlocked.append("hidden_diver")
    # –¢–∞–π–Ω–∞—è: Risk Tamer ‚Äî –µ—Å–ª–∏ risk_mode –≤ meta = 'turbo' –∏ –ø—Ä–∏–±—ã–ª—å > 50
    if meta.get("risk_mode") == "turbo" and fill.get("pnl", 0) > 50:
        unlocked.append("risk_tamer")
    # –¢–∞–π–Ω–∞—è: Fast Fingers ‚Äî –µ—Å–ª–∏ latency_ms < 20
    if fill.get("meta", {}).get("latency_ms", 1000) < 20:
        unlocked.append("fast_fingers")
    # –¢–∞–π–Ω–∞—è: Night Owl ‚Äî –µ—Å–ª–∏ —Å–¥–µ–ª–∫–∞ –≤ 2‚Äì4 –Ω–æ—á–∏ UTC
    hour = fill.get("dt", datetime.utcnow()).hour
    if 2 <= hour < 4:
        unlocked.append("night_owl")
    # –¢–∞–π–Ω–∞—è: Zen Master ‚Äî –±–∞–ª–∞–Ω—Å —Ä–æ–≤–Ω–æ 10000
    if abs(meta.get("balance", 0) - 10000) < 1e-4:
        unlocked.append("zen_master")
    return unlocked

def update_on_day_close(user_id, pnl_day):
    pass  # stub for daily close a—Åhievements